#!/usr/bin/env python

"""
Makes the robot move forward and backwards and flip

Publishers: 
diff/cmd_vel (Twist): publish velocity to differential drive


"""

import rospy 
from geometry_msgs.msg import Twist, Vector3

class Flip():

    def __init__(self):
        """ Makes the diff drive robot flip by inverting the velocity signs every few seconds
        """

        # Publishes to diff/cmd_vel
        self.wheel_pub = rospy.Publisher("diff/cmd_vel", Twist, queue_size = 10)
        self.rate = rospy.Rate(100)
        self.v = -10
        self.increment = 2
        while not rospy.is_shutdown():
            
            self.end_time = rospy.get_time() + self.increment
            while rospy.get_time() < self.end_time:
                self.wheel_pub.publish(Twist(linear = Vector3(self.v,0,0), angular =  Vector3(0,0,0)))
                self.rate.sleep()
            
            self.end_time = rospy.get_time() + self.increment
            while rospy.get_time() < self.end_time:
                self.wheel_pub.publish(Twist(linear = Vector3(-self.v,0,0), angular =  Vector3(0,0,0)))
                self.rate.sleep()
            
                



def main():
    rospy.init_node("Flip")
    Flip()
    rospy.spin()

if __name__ == "__main__":
    try:
        main()
    except rospy.ROSInterruptException:
        pass